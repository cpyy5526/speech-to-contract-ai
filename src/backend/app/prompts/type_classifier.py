# 계약서 유형 타입 추출 모듈

import openai
import os
from typing import Callable
from dotenv import load_dotenv, find_dotenv

# 사전 정의된 계약 유형 리스트
CONTRACT_TYPES = [
    "증여", "매매", "교환", "소비대차", "사용대차", "임대차", "고용", "도급"
]

#계약 유형 추출
def get_contract_type(
    conversation_text: str,
    gpt_caller: Callable[[list[dict]], str]
    )->str:
    
    type_prompt=f"""
        당신은 대화 내용을 문석하여 계약 유형을 정확히 판단하는 법률 전문가 AI입니다. 

        ## 1단계: 대화 내용을 분석하여 핵심 사실을 정리하세요.
        - 누가 무엇을 제공합니까?
        - 상대방은 어떤 대가를 지급하거나 반환하기로 약정합니까?
        - 제공되는 것은 재산, 금전, 근로, 결과물 중 무엇입니까?
        - 거래가 무상인지 유상인지 구분하세요.

        ## 대화 내용:
        {conversation_text}

        ## 2단계: 위에서 정리한 사실을 바탕으로 법적 의미를 해석하세요.
        - 당사자들의 약정이 가져오는 법적 효과(소유권 이전, 사용권 부여, 근로 제공 등)를 명확히 합니다.
        - 당사자들이 기대하는 실질적 목적(소유, 이용, 보수 수취 등)을 파악합니다.

        ## 3단계: 아래 계약 유형 기준과 비교하여 가장 일치하는 유형을 선택하세요.
        - 증여: 무상으로 재산을 이전하는 계약.
        - 매매: 일방이 부동산의 소유권을 이전하고, 상대방이 그 대금을 지급하기로 약정하는 계약.
        - 교환: 쌍방이 서로 부동산의 소유권을 맞교환 하는 계약.
        - 소비대차: 일방이 금전 또는 대체물을 빌려주고, 상대방이 동일한 종류와 품질, 수량의 물건을 반환하기로 약정하는 계약.
        - 사용대차: 일방이 금전 외의 물건을 무상으로 빌려주고, 상대방이 사용·수익한 후 원물 그대로 반환하기로 약정하는 계약.
        - 임대차: 일방이 부동산을 유상으로 빌려주고, 상대방이 차임을 지급하며 사용·수익한 후 반환하기로 약정하는 계약.
        - 고용: 근로자와 사용자 간에 근로 제공 및 보수 지급 등 근로 조건을 정하는 계약. 
        - 도급: 일방이 건설공사를 완성할 것을 약정하고, 상대방이 이에 대한 보수를 지급하기로 하는 계약.

        ## 4단계: 최종 답변 출력
        - 반드시 위 유형 중 하나를 한 단어로만 출력하세요.
        - 해당하지 않으면 '기타'라고만 답하세요.
        - 그 외의 설명, 해석, 다른 표현은 절대 하지 마세요.

        👉 최종 답변 (한 단어로):
        """
    
    messages=[
            {
                "role":"system", 
                "content":f"당신은 계약서를 분석하는 법률 전문가 AI 입니다.:\n{type_prompt}"
            },
            {
                "role":"user",
                "content":f"다음은 고용계약을 위한 사용자 간 대화입니다. 대화 내용을 분석하여 적절한 계약 유형과 관련 키워드를 반환해주세요.:\n{conversation_text}"
            },
        ]
    
    response=gpt_caller(messages)

    result_type= response.choices[0].message.content.strip().split()[-1]
    
    # 보정: 결과가 예상 유형이 아닐 경우 '기타' 처리
    if result_type not in CONTRACT_TYPES:
        return "기타"

    return result_type


