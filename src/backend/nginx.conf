worker_processes  1;

events {
    worker_connections  1024;
}

http {
    lua_need_request_body on;
    client_body_buffer_size 10M;

    server {
        listen 8080;
        server_name localhost;

        client_max_body_size 25M;

        # 확장자 포함된 URL 처리
        location ~ ^/upload/audio/(?<uuid>[a-zA-Z0-9\-]+)\.(?<ext>[a-z0-9]+)$ {
            content_by_lua_block {
                local uuid = ngx.var.uuid          -- "978351f6-0ebe-41b6-..."
                local ext = ngx.var.ext            -- "wav", "mp3", ...

                if not uuid or uuid == "" or not ext or ext == "" then
                    ngx.status = 400
                    ngx.say("Invalid or expired upload_url")
                    return
                end

                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                if not data then
                    local body_file = ngx.req.get_body_file()
                    if body_file then
                        local file = io.open(body_file, "rb")
                        if file then
                            data = file:read("*a")
                            file:close()
                        end
                    end
                end
                if not data then
                    ngx.status = 400
                    ngx.say("Invalid or missing body data")
                    return
                end

                if #data > 25 * 1024 * 1024 then
                    ngx.status = 413
                    ngx.say("Audio file is too large")
                    return
                end

                local upload_path = "/home/ubuntu/speech-to-contract-ai/src/backend/uploads/audio/" .. uuid .. "." .. ext
                local file = io.open(upload_path, "wb")
                if not file then
                    ngx.status = 500
                    ngx.say("Failed to open file for writing")
                    return
                end
                file:write(data)
                file:close()

                local http = require("resty.http")
                local httpc = http.new()

                -- 확장자 제거된 UUID만 notify URL에 사용
                local notify_url = "http://127.0.0.1:8000/transcription/uploaded-notify/" .. uuid
                local res, err = httpc:request_uri(notify_url, {
                    method = "POST"
                })
                if not res then
                    ngx.log(ngx.ERR, "Callback request failed: ", err or "unknown")
                    ngx.status = 500
                    ngx.say("Callback request failed: " .. (err or "unknown"))
                    return
                end

                if res.status ~= 202 then
                    ngx.status = 500
                    ngx.say("Callback responded with non-202 status: " .. res.status)
                    return
                end

                ngx.status = 202
                ngx.say("Upload and notify succeeded")
            }
        }
    }
}