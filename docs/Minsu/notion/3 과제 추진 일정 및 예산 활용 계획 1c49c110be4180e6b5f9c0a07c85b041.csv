주차,일정,프론트,AI,백엔드,공통,Status,날짜
1주차,3.17 - 3.23,"• 프로젝트 요구사항 분석 
• 기술 스택 확정
• 백엔드 API 명세 확인 및 데이터 흐름 정리
• Figma 등으로 기본 UI 디자인 초안 작성","• 프로젝트 요구사항 분석 
• OpenAI API 사용 방법 연구
• 프롬프트 엔지니어링을 위한 기본적인 기술 확정 및 연구
• 텍스트 전처리 및 키워드 추출 방법 연구
• 백엔드 및 프론트엔드 팀과 협의하여 API 명세서 초안 작성","• 백엔드 세부 요구사항 문서화 및 피드백
• 역할 범위 및 세부 계획 검토",Legal tech 기업 조사,시작 전,
2주차,3.24 - 3.30,"• 음성 녹음 기능 개발 
• 녹음 파일 업로드 UI 구현
• 파일 업로드 기능 구현 (MP3, WAV 지원)
• 프론트에서 API로 업로드 요청 보내는 기능 추가","• Whisper(STT)로 변환된 텍스트의 전처리 로직 설계

    ◦ 불필요한 문장 제거, 문장 분리 등
• 계약서 관련 키워드 추출을 위한 프롬프트 엔지니어링 초안 작성
• 키워드 추출 테스트를 위한 샘플 데이터 수집 및 테스트","• FastAPI 기반 API 설계 초안 작성
• 데이터 흐름 및 저장 방식 초안 작성
• Whisper API 테스트",,시작 전,
3주차,3.31 - 4.6,"• 계약서 내용 표시 UI 개발
• STT 결과를 화면에 표시하는 기능 추가
• 프롬프트 엔지니어링 결과(계약서 초안)를 받아와서 표시하는 기능 개발","• OpenAI API를 활용한 키워드 추출 로직 구현
• 프롬프트 엔지니어링을 통해 키워드 추출 정확도 향상
• 테스트 데이터를 활용하여 키워드 추출 결과 검증","• FastAPI 기반 백엔드 API 개발 시작
• Whisper API 연동 테스트
• 데이터 저장 및 로그 기록 설계",,시작 전,
4주차,4.7 - 4.13,"• 계약서 편집 기능 UI 구현 
• 수정된 내용을 백엔드로 전송하는 기능 추가
• 실시간 편집 상태 저장 ","• 추출된 키워드를 기반으로 계약서를 작성하는 프롬프트 엔지니어링 설계
• 계약서 템플릿 설계 및 샘플 데이터 생성
• OpenAI API를 활용한 계약서 작성 테스트","• API 성능 개선(Whisper 호출 최적화)
• 프롬프트 엔지니어링 팀과의 API 연동 논의",,시작 전,
5주차,4.14 - 4.20,"• pdf-lib을 활용한 PDF 변환 기능 구현
• 계약서 내용을 PDF로 변환하여 다운로드 기능 추가
• PDF 다운로드 버튼 UI 개발","• 계약서 작성 로직 구현 및 프롬프트 엔지니어링 최적화
• 테스트 데이터를 활용하여 계약서 작성 결과 검증
• 작성된 계약서의 정확도 및 품질 평가","• API 엔드포인트 문서화
• ChatGPT API 연동 구현",,시작 전,
6주차,4.21 - 4.27,"• 다국어 선택 UI 추가 
• 프론트엔드에서 다국어 변경 기능 적용 
• 백엔드에서 제공하는 다국어 데이터 반영","• 키워드 추출 및 계약서 작성 정확도 향상을 위한 프롬프트 엔지니어링 개선
• OpenAI API 파라미터 조정 
• 추가 테스트 데이터를 활용하여 모델 성능 평가","• 프론트엔드 연동 논의 및 테스트
• 백엔드 API 테스트 및 디버깅",,시작 전,
7주차,4.28 - 5.4,"• API 연결 통합 테스트 (녹음 → STT 변환 → 계약서 생성 → PDF 다운로드)
• 버그 수정 및 UI 최적화","• 프론트엔드, 백엔드, AI 파트 통합 테스트 진행
• 발견된 버그 수정 및 성능 개선
• 사용자 피드백을 반영한 프롬프트 엔지니어링 추가 개선","• 계약서 저장 및 PDF 변환 기능 추가
• 백엔드 API 안정화 및 성능 최적화",,시작 전,
8주차,5.5 - 5.11,"• 웹앱 배포 준비
• 프론트엔드 성능 최적화 
• 실제 환경에서 STT 및 계약서 생성 속도 테스트","• 키워드 추출 및 계약서 작성 로직 최적화
• 프로젝트 문서화 
• 추가 테스트 및 성능 평가","• 배포 인프라 설정 및 운영 환경 구축
• Docker 기반 컨테이너 배포",,시작 전,
9주차,5.12 - 5.18,"• 사용자 테스트 진행 및 피드백 수집
• 사용성 개선 (UI/UX 피드백 반영)
• 버그 수정 및 기능 보완","• 내부 사용자 테스트 진행
• 사용자 피드백을 반영한 프롬프트 엔지니어링 및 로직 수정
• 최종 성능 평가 및 버그 수정","• 배포 및 성능 개선 작업
• 최종 서비스 점검 및 사용자 테스트",,시작 전,
10주차,5.19 - 5.25,"• 최종 버그 수정 및 성능 최적화
• 프로젝트 문서화 
• 최종 배포 및 서비스 점검","• 최종 버그 수정 및 성능 최적화
• 프로젝트 최종 문서화 및 코드 정리
• 배포 준비 및 최종 테스트","• 구현 사항 최종 정리 및 문서화
• 결과보고서 작성 준비",,시작 전,